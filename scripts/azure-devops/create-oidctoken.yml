name: $(Date:yyyyMMdd)$(Rev:.r)-$(Build.DefinitionVersion)-$(SourceBranchName)-$(Build.BuildId)

pr:
  autoCancel: false
  branches:
    include:
    - '*'
  drafts: false
  paths:
    exclude:
    - '.devcontainer/**'  
    - 'visuals/**'  
    - '*.md'  
schedules:
- cron: '0 0 * * Tue,Fr'
  displayName: 'Bi-weekly build (UTC)'
  # Run if there are no changes
  always: 'true'
  branches:
    include:
    - main
trigger: none

variables:
- group: 'identity-ci' # Should contain 'azureConnection'
- name: scriptDirectory
  value: $(Build.SourcesDirectory)/scripts/azure-devops

jobs:
- job: oidcTokenExample
  displayName: 'Create Terraform environment variables'

  pool:
    name: 'Azure Pipelines'
    vmImage: ubuntu-latest

  steps:
  - task: AzureCLI@2
    displayName: 'Scripted with addSpnToEnvironment'
    inputs:
      addSpnToEnvironment: true
      azureSubscription: '$(azureConnection)'
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        Write-Host "Using Service Connection $(azureConnection)"
        az account show -o json >"$(azureConnection).json"
        ./set_terraform_azurerm_vars.ps1

        az logout 
        ./test_terraform_azure_environment_variables.ps1
        az account show -o json >set_terraform_azurerm_vars.json
      failOnStandardError: true
      workingDirectory: '$(scriptDirectory)'

  - task: AzureCLI@2
    displayName: 'Scripted with REST API'
    inputs:
      addSpnToEnvironment: false
      azureSubscription: '$(azureConnection)'
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        Write-Host "Using Service Connection $(azureConnection)"
        ./set_terraform_azurerm_vars.ps1 -RequestNewToken -SystemAccessToken $(System.AccessToken)

        az logout 
        ./test_terraform_azure_environment_variables.ps1
        az account show -o json >set_terraform_azurerm_vars-RequestNewToken.json
      failOnStandardError: true
      workingDirectory: '$(scriptDirectory)'

  - task: AzureCLI@2
    displayName: 'Inline script'
    inputs:
      azureSubscription: '$(azureConnection)'
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        Get-ChildItem -Path Env: -Recurse -Include ENDPOINT_DATA_* | Select-Object -First 1 -ExpandProperty Name `
                                                                   | ForEach-Object { $_.Split("_")[2] }
                                                                   | Set-Variable serviceConnectionId

        Invoke-RestMethod -Headers @{
                            Authorization  = "Bearer $(System.AccessToken)"
                            'Content-Type' = 'application/json'
                          } `
                          -Uri "${env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${env:SYSTEM_TEAMPROJECTID}/_apis/distributedtask/hubs/build/plans/${env:SYSTEM_PLANID}/jobs/${env:SYSTEM_JOBID}/oidctoken?api-version=7.1-preview.1&serviceConnectionId=${serviceConnectionId}" `
                          -Method Post | Set-Variable oidcTokenResponse
        $oidcToken = $oidcTokenResponse.oidcToken
        if ($oidcToken) {
          Write-Host "idToken (masked):"
          $oidcToken -replace '.','*' 
        } else {
          throw "Failed to get OIDC token"
        }
      failOnStandardError: true

  - publish: $(Build.ArtifactStagingDirectory)
    displayName: 'Publish json files'
    artifact: indentityInfo-$(System.PlanId)-$(System.JobId)